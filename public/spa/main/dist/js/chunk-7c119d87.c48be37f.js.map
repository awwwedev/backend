{"version":3,"sources":["webpack:///./src/views/Equipment/Constructor.vue?ca70","webpack:///./src/views/Equipment/Constructor.vue","webpack:///./src/views/Equipment/Constructor.vue?c1e0","webpack:///./src/views/Equipment/Constructor.vue?8cda","webpack:///./src/models/Equipment.ts","webpack:///./src/models/RealtyType.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","pageName","attrs","formData","getValidationMessage","$v","name","getFieldState","model","value","callback","$$v","$set","trim","expression","realty_type_id","_l","type","idx","key","id","isCreatePage","on","onSubmit","staticRenderFns","entityName","types","created_at","updated_at","request","redirect","$touch","$invalid","$store","setData","title","text","variant","Equipment","create","then","response","$router","push","params","data","update","updateFormData","equipment","RealtyType","getList","get","$route","immediate","components","Dates","UploadedImage","ConstructorActions","validations","required","component","post","prepareFormData","delete"],"mappings":"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","file":"js/chunk-7c119d87.c48be37f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section\"},[_c('h1',{staticClass:\"mb-5\"},[_vm._v(_vm._s(_vm.pageName))]),_c('b-form',[_c('Dates',{attrs:{\"form-data\":_vm.formData}}),_c('b-card',{staticClass:\"mb-3 shadow-sm\",attrs:{\"header\":\"Основное\"}},[_c('b-form-group',{attrs:{\"label\":\"Название\",\"label-for\":\"name\",\"invalid-feedback\":_vm.getValidationMessage(_vm.$v.formData.name)}},[_c('b-form-input',{attrs:{\"id\":\"name\",\"state\":_vm.getFieldState(_vm.$v.formData.name)},model:{value:(_vm.formData.name),callback:function ($$v) {_vm.$set(_vm.formData, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"formData.name\"}})],1),_c('b-form-group',{attrs:{\"label\":\"Тип\",\"label-for\":\"type\",\"invalid-feedback\":_vm.getValidationMessage(_vm.$v.formData.realty_type_id)}},[_c('b-select',{attrs:{\"id\":\"type\",\"state\":_vm.getFieldState(_vm.$v.formData.realty_type_id)},model:{value:(_vm.formData.realty_type_id),callback:function ($$v) {_vm.$set(_vm.formData, \"realty_type_id\", $$v)},expression:\"formData.realty_type_id\"}},[_c('b-select-option',{attrs:{\"value\":null}},[_vm._v(\"--- Выберите тип ---\")]),_vm._l((_vm.types),function(type,idx){return _c('b-select-option',{key:idx,attrs:{\"value\":type.id}},[_vm._v(\" \"+_vm._s(type.name)+\" \")])})],2)],1)],1)],1),_c('ConstructorActions',{attrs:{\"cancel-to\":{ name: 'admin.equipment' },\"is-create-page\":_vm.isCreatePage},on:{\"submit\":_vm.onSubmit}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Mixins, Watch} from \"vue-property-decorator\";\nimport ConstructorHelpers from \"@/mixins/constructorHelpers\";\nimport {Validation, validationMixin} from \"vuelidate\";\nimport ValidationMixin from \"@/mixins/validation\";\nimport {required} from \"vuelidate/lib/validators\";\nimport ConstructorActions from \"@/components/widget/ConstructorActions.vue\";\nimport RealtyType from \"@/models/RealtyType\";\nimport {getModule} from \"vuex-module-decorators\";\nimport Notification from \"@/store/modules/notification\";\nimport UploadedImage from \"@/components/UploadedImage.vue\";\nimport Equipment from \"@/models/Equipment\";\nimport Dates from \"@/components/constructor/Dates.vue\";\n\n\n@Component({\n  components: {Dates, UploadedImage, ConstructorActions},\n  validations: {\n    formData: {\n      name: {\n        required\n      },\n      realty_type_id: {\n        required\n      }\n    }\n  }\n})\nexport default class Constructor extends Mixins<Validation, ValidationMixin, ConstructorHelpers>(validationMixin, ValidationMixin, ConstructorHelpers) {\n  entityName = 'комплектация недвижимости'\n  types = [] as Array<RealtyType>\n\n  formData = {\n    id: null as null | number,\n    name: '',\n    realty_type_id: null as null | number,\n    created_at:  null as string | null,\n    updated_at: null as string | null\n  }\n\n  onSubmit(redirect = true): void {\n    let request\n\n    this.$v.$touch()\n\n    if (!this.$v.$invalid) {\n      if (this.isCreatePage) {\n        request = Equipment.create(this.formData)\n            .then((response) => {\n              getModule(Notification, this.$store).setData({title: 'Запись успешно создана', variant: 'success'})\n              this.$router.push({name: 'admin.equipment.change', params: {id: response.data.id as unknown as string}})\n            })\n      } else {\n        request = Equipment.update(this.formData)\n            .then((response) => {\n              getModule(Notification, this.$store).setData({title: 'Запись успешно изменена', variant: 'success'})\n              this.updateFormData(response.data)\n            })\n      }\n      request.then(() => {\n        if (redirect) {\n          this.$router.push({name: 'admin.equipment'})\n        }\n      })\n    } else {\n      getModule(Notification, this.$store).setData({\n        title: 'Ошибка валидации!',\n        text: 'Проверте корректность и запоолненость полей',\n        variant: 'danger'\n      })\n    }\n  }\n\n  updateFormData (equipment: Equipment): void {\n    this.formData = {\n      name: equipment.name as string,\n      id: equipment.id as number,\n      realty_type_id: equipment.realty_type_id as number,\n      created_at: equipment.created_at as string,\n      updated_at: equipment.updated_at as string\n    }\n  }\n\n  created(): void {\n    RealtyType.getList().then(response => {\n      this.types = response.data\n    })\n  }\n\n  @Watch('$route.meta.isCreatePage', { immediate: true })\n  watchIsCreatePage(isCreatePage: boolean): void {\n    if (!isCreatePage) {\n      Equipment.get({id: this.$route.params.id as unknown as number})\n          .then(response => this.updateFormData(response.data))\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Constructor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Constructor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Constructor.vue?vue&type=template&id=5b9fcfde&scoped=true&\"\nimport script from \"./Constructor.vue?vue&type=script&lang=ts&\"\nexport * from \"./Constructor.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b9fcfde\",\n  null\n  \n)\n\nexport default component.exports","import {AxiosResponse} from \"axios\";\nimport api from \"../common/myApi.json\";\nimport http from \"@/common/http\";\nimport BaseModel from \"@/models/BaseModel\";\n\nclass Equipment extends BaseModel {\n    id?: number;\n    name?: string;\n    realty_type_id?: number;\n\n    static get(params: { id: number; [key: string]: string | number }): Promise<AxiosResponse<Equipment>> {\n        if (process.env.VUE_APP_USE_LOCAL_API === 'false') {\n            return http.get<Equipment>('equipment/' + params.id, { params: params })\n        } else {\n            return new Promise<AxiosResponse<Equipment>>((resolve) => {\n                resolve({ data: api.realtyType[0] } as AxiosResponse<Equipment>)\n            })\n        }\n    }\n\n    static getList(params: { [key: string]: number | string | undefined } = {}): Promise<AxiosResponse<Array<Equipment>>> {\n        if (process.env.VUE_APP_USE_LOCAL_API === 'false') {\n            return http.get<Array<Equipment>>('equipment', { params })\n        } else {\n            return new Promise<AxiosResponse<Array<Equipment>>>((resolve) => {\n                resolve({ data: api.equipments }as AxiosResponse<Array<Equipment>>)\n            })\n        }\n\n    }\n\n    static create (params: { [key: string]: any }): Promise<AxiosResponse<Equipment>> {\n        return http.post<Equipment>('equipment', Equipment.prepareFormData(params))\n    }\n    static update (params: { [key: string]: any }): Promise<AxiosResponse<Equipment>> {\n        return http.post<Equipment>('equipment/' + params.id, Equipment.prepareFormData({...params, \"_method\": \"PUT\"}))\n    }\n    static destroy (data: { [key: string]: any }): Promise<AxiosResponse> {\n        return http.delete('equipment', { params: { id: data } })\n    }\n}\n\nexport default Equipment\n","import {AxiosResponse} from \"axios\";\nimport api from \"@/common/myApi.json\";\nimport http from \"@/common/http\";\nimport BaseModel from \"@/models/BaseModel\";\n\nexport default class RealtyType extends BaseModel {\n    constructor(data: {id?: number | string, name?: string}) {\n        super()\n\n        this.id = data.id\n        this.name = data.name\n    }\n\n    id?: number | string\n    name?: string\n    img_path?: string\n\n    static get(params: { id: number; [key: string]: string | number }): Promise<AxiosResponse<RealtyType>> {\n        if (process.env.VUE_APP_USE_LOCAL_API === 'false') {\n            return http.get<RealtyType>('realtyType/' + params.id, { params: params })\n        } else {\n            return new Promise<AxiosResponse<RealtyType>>((resolve) => {\n                resolve({ data: api.realtyType[0] } as AxiosResponse<RealtyType>)\n            })\n        }\n    }\n\n    static getList(params: { [key: string]: number | string } = {}): Promise<AxiosResponse<RealtyType[]>> {\n\n        if (process.env.VUE_APP_USE_LOCAL_API === 'false') {\n            return http.get<RealtyType[]>('realtyType', { params: params })\n        } else {\n            return new Promise<AxiosResponse<RealtyType[]>>((resolve) => {\n                resolve({ data: api.realtyType } as AxiosResponse<RealtyType[]>)\n            })\n        }\n    }\n\n    static create (params: { [key: string]: any }): Promise<AxiosResponse<RealtyType>> {\n        return http.post<RealtyType>('realtyType', RealtyType.prepareFormData(params))\n    }\n    static update (params: { [key: string]: any }): Promise<AxiosResponse<RealtyType>> {\n        return http.post<RealtyType>('realtyType/' + params.id, RealtyType.prepareFormData({...params, \"_method\": \"PUT\"}))\n    }\n    static destroy (data: { [key: string]: any }): Promise<AxiosResponse> {\n        return http.delete('realtyType', { params: { id: data } })\n    }\n}\n"],"sourceRoot":""}